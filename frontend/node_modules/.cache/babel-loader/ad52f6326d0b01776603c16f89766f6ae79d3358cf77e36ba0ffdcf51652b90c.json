{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\YOLO_HOME - Copy\\\\frontend\\\\src\\\\components\\\\Alerts\\\\AlertConfig.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AlertConfigController from '../../controllers/AlertConfigController';\nimport './AlertConfig.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AlertConfig = () => {\n  _s();\n  const [configs, setConfigs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingConfig, setEditingConfig] = useState(null);\n\n  // Load alert configurations on mount\n  useEffect(() => {\n    loadConfigs();\n  }, []);\n  const loadConfigs = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const configData = await AlertConfigController.getAlertConfigs();\n      setConfigs(configData);\n    } catch (err) {\n      setError('Failed to load alert configurations. Please try again.');\n      console.error('Error loading configurations:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleToggleActive = async (configId, currentActive) => {\n    try {\n      await AlertConfigController.updateAlertConfig(configId, {\n        isActive: !currentActive\n      });\n\n      // Update the local state\n      setConfigs(configs.map(config => config.id === configId ? {\n        ...config,\n        isActive: !currentActive\n      } : config));\n    } catch (err) {\n      setError('Failed to update alert configuration. Please try again.');\n      console.error('Error updating configuration:', err);\n    }\n  };\n  const handleReset = async () => {\n    try {\n      const resetConfigs = await AlertConfigController.resetAlertConfigs();\n      setConfigs(resetConfigs);\n      setError(null);\n    } catch (err) {\n      setError('Failed to reset alert configurations. Please try again.');\n      console.error('Error resetting configurations:', err);\n    }\n  };\n  const startEditing = config => {\n    setEditingConfig({\n      ...config,\n      minValue: config.minValue.toString(),\n      maxValue: config.maxValue.toString()\n    });\n    setIsEditing(true);\n  };\n  const cancelEditing = () => {\n    setEditingConfig(null);\n    setIsEditing(false);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setEditingConfig({\n      ...editingConfig,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n  const saveConfig = async e => {\n    e.preventDefault();\n    try {\n      const updatedConfig = await AlertConfigController.updateAlertConfig(editingConfig.id, {\n        minValue: parseFloat(editingConfig.minValue),\n        maxValue: parseFloat(editingConfig.maxValue),\n        isActive: editingConfig.isActive\n      });\n\n      // Update the local state\n      setConfigs(configs.map(config => config.id === updatedConfig.id ? updatedConfig : config));\n      setIsEditing(false);\n      setEditingConfig(null);\n      setError(null);\n    } catch (err) {\n      setError('Failed to save alert configuration. Please try again.');\n      console.error('Error saving configuration:', err);\n    }\n  };\n  const getSensorTypeLabel = type => {\n    switch (type) {\n      case 'temperature':\n        return 'Temperature';\n      case 'humidity':\n        return 'Humidity';\n      default:\n        return type.charAt(0).toUpperCase() + type.slice(1);\n    }\n  };\n  const getSensorTypeUnit = type => {\n    switch (type) {\n      case 'temperature':\n        return 'Â°C';\n      case 'humidity':\n        return '%';\n      default:\n        return '';\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: \"Loading configurations...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert-config-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-config-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Alert Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-btn\",\n        onClick: handleReset,\n        children: \"Reset to Default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this), configs.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"config-grid\",\n      children: configs.map(config => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"config-card\",\n        children: isEditing && editingConfig && editingConfig.id === config.id ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: saveConfig,\n          className: \"config-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"config-form-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [getSensorTypeLabel(config.sensorType), \" Alert Settings\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Minimum Value:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-with-unit\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"minValue\",\n                value: editingConfig.minValue,\n                onChange: handleInputChange,\n                step: \"0.1\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"unit\",\n                children: getSensorTypeUnit(config.sensorType)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Maximum Value:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-with-unit\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"maxValue\",\n                value: editingConfig.maxValue,\n                onChange: handleInputChange,\n                step: \"0.1\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"unit\",\n                children: getSensorTypeUnit(config.sensorType)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"isActive\",\n                checked: editingConfig.isActive,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 23\n              }, this), \"Enable alerts\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"save-btn\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"cancel-btn\",\n              onClick: cancelEditing,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"config-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [getSensorTypeLabel(config.sensorType), \" Alert Settings\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"config-status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: config.isActive ? 'active' : 'inactive',\n                children: config.isActive ? 'Enabled' : 'Disabled'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"config-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"threshold\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Min Value:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: [config.minValue, \" \", getSensorTypeUnit(config.sensorType)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"threshold\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Max Value:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: [config.maxValue, \" \", getSensorTypeUnit(config.sensorType)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"config-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-btn\",\n              onClick: () => startEditing(config),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `toggle-btn ${config.isActive ? 'active' : 'inactive'}`,\n              onClick: () => handleToggleActive(config.id, config.isActive),\n              children: config.isActive ? 'Disable' : 'Enable'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)\n      }, config.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-configs\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No alert configurations found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-btn\",\n        onClick: handleReset,\n        children: \"Initialize Default Configurations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(AlertConfig, \"7cP1ykhm3/SnGy9Tx/wJqeZyjsM=\");\n_c = AlertConfig;\nexport default AlertConfig;\nvar _c;\n$RefreshReg$(_c, \"AlertConfig\");","map":{"version":3,"names":["React","useState","useEffect","AlertConfigController","jsxDEV","_jsxDEV","Fragment","_Fragment","AlertConfig","_s","configs","setConfigs","isLoading","setIsLoading","error","setError","isEditing","setIsEditing","editingConfig","setEditingConfig","loadConfigs","configData","getAlertConfigs","err","console","handleToggleActive","configId","currentActive","updateAlertConfig","isActive","map","config","id","handleReset","resetConfigs","resetAlertConfigs","startEditing","minValue","toString","maxValue","cancelEditing","handleInputChange","e","name","value","type","checked","target","saveConfig","preventDefault","updatedConfig","parseFloat","getSensorTypeLabel","charAt","toUpperCase","slice","getSensorTypeUnit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","onSubmit","sensorType","onChange","step","required","_c","$RefreshReg$"],"sources":["C:/Users/admin/OneDrive/MÃ¡y tÃ­nh/YOLO_HOME - Copy/frontend/src/components/Alerts/AlertConfig.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AlertConfigController from '../../controllers/AlertConfigController';\r\nimport './AlertConfig.css';\r\n\r\nconst AlertConfig = () => {\r\n  const [configs, setConfigs] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editingConfig, setEditingConfig] = useState(null);\r\n  \r\n  // Load alert configurations on mount\r\n  useEffect(() => {\r\n    loadConfigs();\r\n  }, []);\r\n  \r\n  const loadConfigs = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const configData = await AlertConfigController.getAlertConfigs();\r\n      setConfigs(configData);\r\n    } catch (err) {\r\n      setError('Failed to load alert configurations. Please try again.');\r\n      console.error('Error loading configurations:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleToggleActive = async (configId, currentActive) => {\r\n    try {\r\n      await AlertConfigController.updateAlertConfig(configId, { isActive: !currentActive });\r\n      \r\n      // Update the local state\r\n      setConfigs(configs.map(config => \r\n        config.id === configId ? { ...config, isActive: !currentActive } : config\r\n      ));\r\n    } catch (err) {\r\n      setError('Failed to update alert configuration. Please try again.');\r\n      console.error('Error updating configuration:', err);\r\n    }\r\n  };\r\n  \r\n  const handleReset = async () => {\r\n    try {\r\n      const resetConfigs = await AlertConfigController.resetAlertConfigs();\r\n      setConfigs(resetConfigs);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to reset alert configurations. Please try again.');\r\n      console.error('Error resetting configurations:', err);\r\n    }\r\n  };\r\n  \r\n  const startEditing = (config) => {\r\n    setEditingConfig({\r\n      ...config,\r\n      minValue: config.minValue.toString(),\r\n      maxValue: config.maxValue.toString()\r\n    });\r\n    setIsEditing(true);\r\n  };\r\n  \r\n  const cancelEditing = () => {\r\n    setEditingConfig(null);\r\n    setIsEditing(false);\r\n  };\r\n  \r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setEditingConfig({\r\n      ...editingConfig,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    });\r\n  };\r\n  \r\n  const saveConfig = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      const updatedConfig = await AlertConfigController.updateAlertConfig(\r\n        editingConfig.id, \r\n        {\r\n          minValue: parseFloat(editingConfig.minValue),\r\n          maxValue: parseFloat(editingConfig.maxValue),\r\n          isActive: editingConfig.isActive\r\n        }\r\n      );\r\n      \r\n      // Update the local state\r\n      setConfigs(configs.map(config => \r\n        config.id === updatedConfig.id ? updatedConfig : config\r\n      ));\r\n      \r\n      setIsEditing(false);\r\n      setEditingConfig(null);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to save alert configuration. Please try again.');\r\n      console.error('Error saving configuration:', err);\r\n    }\r\n  };\r\n  \r\n  const getSensorTypeLabel = (type) => {\r\n    switch (type) {\r\n      case 'temperature':\r\n        return 'Temperature';\r\n      case 'humidity':\r\n        return 'Humidity';\r\n      default:\r\n        return type.charAt(0).toUpperCase() + type.slice(1);\r\n    }\r\n  };\r\n  \r\n  const getSensorTypeUnit = (type) => {\r\n    switch (type) {\r\n      case 'temperature':\r\n        return 'Â°C';\r\n      case 'humidity':\r\n        return '%';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n  \r\n  if (isLoading) {\r\n    return <div className=\"loading-indicator\">Loading configurations...</div>;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"alert-config-container\">\r\n      <div className=\"alert-config-header\">\r\n        <h1>Alert Configuration</h1>\r\n        <button \r\n          className=\"reset-btn\" \r\n          onClick={handleReset}\r\n        >\r\n          Reset to Default\r\n        </button>\r\n      </div>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      \r\n      {configs.length > 0 ? (\r\n        <div className=\"config-grid\">\r\n          {configs.map(config => (\r\n            <div key={config.id} className=\"config-card\">\r\n              {isEditing && editingConfig && editingConfig.id === config.id ? (\r\n                <form onSubmit={saveConfig} className=\"config-form\">\r\n                  <div className=\"config-form-header\">\r\n                    <h3>{getSensorTypeLabel(config.sensorType)} Alert Settings</h3>\r\n                  </div>\r\n                  \r\n                  <div className=\"form-group\">\r\n                    <label>Minimum Value:</label>\r\n                    <div className=\"input-with-unit\">\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"minValue\"\r\n                        value={editingConfig.minValue}\r\n                        onChange={handleInputChange}\r\n                        step=\"0.1\"\r\n                        required\r\n                      />\r\n                      <span className=\"unit\">{getSensorTypeUnit(config.sensorType)}</span>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"form-group\">\r\n                    <label>Maximum Value:</label>\r\n                    <div className=\"input-with-unit\">\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"maxValue\"\r\n                        value={editingConfig.maxValue}\r\n                        onChange={handleInputChange}\r\n                        step=\"0.1\"\r\n                        required\r\n                      />\r\n                      <span className=\"unit\">{getSensorTypeUnit(config.sensorType)}</span>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"form-group\">\r\n                    <label className=\"checkbox-label\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name=\"isActive\"\r\n                        checked={editingConfig.isActive}\r\n                        onChange={handleInputChange}\r\n                      />\r\n                      Enable alerts\r\n                    </label>\r\n                  </div>\r\n                  \r\n                  <div className=\"form-actions\">\r\n                    <button type=\"submit\" className=\"save-btn\">Save</button>\r\n                    <button type=\"button\" className=\"cancel-btn\" onClick={cancelEditing}>Cancel</button>\r\n                  </div>\r\n                </form>\r\n              ) : (\r\n                <>\r\n                  <div className=\"config-header\">\r\n                    <h3>{getSensorTypeLabel(config.sensorType)} Alert Settings</h3>\r\n                    <div className=\"config-status\">\r\n                      <span className={config.isActive ? 'active' : 'inactive'}>\r\n                        {config.isActive ? 'Enabled' : 'Disabled'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"config-details\">\r\n                    <div className=\"threshold\">\r\n                      <span className=\"label\">Min Value:</span>\r\n                      <span className=\"value\">{config.minValue} {getSensorTypeUnit(config.sensorType)}</span>\r\n                    </div>\r\n                    <div className=\"threshold\">\r\n                      <span className=\"label\">Max Value:</span>\r\n                      <span className=\"value\">{config.maxValue} {getSensorTypeUnit(config.sensorType)}</span>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"config-actions\">\r\n                    <button \r\n                      className=\"edit-btn\"\r\n                      onClick={() => startEditing(config)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button \r\n                      className={`toggle-btn ${config.isActive ? 'active' : 'inactive'}`}\r\n                      onClick={() => handleToggleActive(config.id, config.isActive)}\r\n                    >\r\n                      {config.isActive ? 'Disable' : 'Enable'}\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"no-configs\">\r\n          <p>No alert configurations found.</p>\r\n          <button \r\n            className=\"reset-btn\" \r\n            onClick={handleReset}\r\n          >\r\n            Initialize Default Configurations\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertConfig; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}