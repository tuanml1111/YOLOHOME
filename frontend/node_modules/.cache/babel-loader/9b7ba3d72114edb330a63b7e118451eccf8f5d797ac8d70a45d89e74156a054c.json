{"ast":null,"code":"import authService from '../services/authService';\nimport UserModel from '../models/UserModel';\nclass AuthController {\n  static async login(username, password) {\n    try {\n      // Call authentication service\n      const response = await authService.login(username, password);\n      if (response.success) {\n        // Store user information and token\n        localStorage.setItem('userId', response.user.id);\n        localStorage.setItem('token', response.token);\n\n        // Create user model instance with data\n        const user = new UserModel(response.user);\n        return {\n          success: true,\n          token: response.token,\n          userId: response.user.id\n        };\n      } else {\n        return {\n          success: false,\n          message: response.message || 'Login failed'\n        };\n      }\n    } catch (error) {\n      console.error('AuthController login error:', error);\n      return {\n        success: false,\n        message: 'An error occurred during login'\n      };\n    }\n  }\n  static async logout() {\n    try {\n      await authService.logout();\n\n      // Clear local storage\n      localStorage.removeItem('token');\n      localStorage.removeItem('userId');\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('AuthController logout error:', error);\n      return {\n        success: false,\n        message: 'An error occurred during logout'\n      };\n    }\n  }\n  static isAuthenticated() {\n    return localStorage.getItem('token') !== null;\n  }\n  static getCurrentUserId() {\n    return localStorage.getItem('userId');\n  }\n}\nexport default AuthController;","map":{"version":3,"names":["authService","UserModel","AuthController","login","username","password","response","success","localStorage","setItem","user","id","token","userId","message","error","console","logout","removeItem","isAuthenticated","getItem","getCurrentUserId"],"sources":["C:/Users/admin/OneDrive/Máy tính/YOLO_HOME - Copy/frontend/src/controllers/AuthController.js"],"sourcesContent":["import authService from '../services/authService';\r\nimport UserModel from '../models/UserModel';\r\n\r\nclass AuthController {\r\n  static async login(username, password) {\r\n    try {\r\n      // Call authentication service\r\n      const response = await authService.login(username, password);\r\n      \r\n      if (response.success) {\r\n        // Store user information and token\r\n        localStorage.setItem('userId', response.user.id);\r\n        localStorage.setItem('token', response.token);\r\n        \r\n        // Create user model instance with data\r\n        const user = new UserModel(response.user);\r\n        \r\n        return {\r\n          success: true,\r\n          token: response.token,\r\n          userId: response.user.id\r\n        };\r\n      } else {\r\n        return {\r\n          success: false,\r\n          message: response.message || 'Login failed'\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('AuthController login error:', error);\r\n      return {\r\n        success: false,\r\n        message: 'An error occurred during login'\r\n      };\r\n    }\r\n  }\r\n  \r\n  static async logout() {\r\n    try {\r\n      await authService.logout();\r\n      \r\n      // Clear local storage\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('userId');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('AuthController logout error:', error);\r\n      return {\r\n        success: false,\r\n        message: 'An error occurred during logout'\r\n      };\r\n    }\r\n  }\r\n  \r\n  static isAuthenticated() {\r\n    return localStorage.getItem('token') !== null;\r\n  }\r\n  \r\n  static getCurrentUserId() {\r\n    return localStorage.getItem('userId');\r\n  }\r\n}\r\n\r\nexport default AuthController;"],"mappings":"AAAA,OAAOA,WAAW,MAAM,yBAAyB;AACjD,OAAOC,SAAS,MAAM,qBAAqB;AAE3C,MAAMC,cAAc,CAAC;EACnB,aAAaC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACrC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMN,WAAW,CAACG,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;MAE5D,IAAIC,QAAQ,CAACC,OAAO,EAAE;QACpB;QACAC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEH,QAAQ,CAACI,IAAI,CAACC,EAAE,CAAC;QAChDH,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACM,KAAK,CAAC;;QAE7C;QACA,MAAMF,IAAI,GAAG,IAAIT,SAAS,CAACK,QAAQ,CAACI,IAAI,CAAC;QAEzC,OAAO;UACLH,OAAO,EAAE,IAAI;UACbK,KAAK,EAAEN,QAAQ,CAACM,KAAK;UACrBC,MAAM,EAAEP,QAAQ,CAACI,IAAI,CAACC;QACxB,CAAC;MACH,CAAC,MAAM;QACL,OAAO;UACLJ,OAAO,EAAE,KAAK;UACdO,OAAO,EAAER,QAAQ,CAACQ,OAAO,IAAI;QAC/B,CAAC;MACH;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,OAAO;QACLR,OAAO,EAAE,KAAK;QACdO,OAAO,EAAE;MACX,CAAC;IACH;EACF;EAEA,aAAaG,MAAMA,CAAA,EAAG;IACpB,IAAI;MACF,MAAMjB,WAAW,CAACiB,MAAM,CAAC,CAAC;;MAE1B;MACAT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;MAChCV,YAAY,CAACU,UAAU,CAAC,QAAQ,CAAC;MAEjC,OAAO;QAAEX,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,OAAO;QACLR,OAAO,EAAE,KAAK;QACdO,OAAO,EAAE;MACX,CAAC;IACH;EACF;EAEA,OAAOK,eAAeA,CAAA,EAAG;IACvB,OAAOX,YAAY,CAACY,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI;EAC/C;EAEA,OAAOC,gBAAgBA,CAAA,EAAG;IACxB,OAAOb,YAAY,CAACY,OAAO,CAAC,QAAQ,CAAC;EACvC;AACF;AAEA,eAAelB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}