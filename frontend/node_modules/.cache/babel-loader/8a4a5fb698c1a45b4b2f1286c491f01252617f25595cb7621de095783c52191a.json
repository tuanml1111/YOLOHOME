{"ast":null,"code":"import apiService from './apiService';\nconst authService = {\n  // Login user\n  async login(username, password) {\n    try {\n      console.log('Attempting login with username:', username);\n      console.log('API URL being used:', `${apiService.defaults.baseURL}/auth/login`);\n      const response = await apiService.post('/auth/login', {\n        username,\n        password\n      });\n      console.log('Login response received:', response);\n      if (response.data.success) {\n        // Save token to localStorage\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('userId', response.data.user.id);\n        return response.data;\n      } else {\n        console.error('Login failed:', response.data.message);\n        return {\n          success: false,\n          message: response.data.message || 'Đăng nhập thất bại'\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response4, _error$response4$data;\n      console.error('Login service error:', error);\n      // Detailed logging for network errors\n      console.error('Error details:', {\n        status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n        statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n        data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n        isNetworkError: !error.response\n      });\n\n      // Kiểm tra chi tiết lỗi kết nối\n      if (!error.response) {\n        return {\n          success: false,\n          message: 'Không thể kết nối đến máy chủ. Vui lòng kiểm tra kết nối mạng hoặc máy chủ đã được khởi động.'\n        };\n      }\n      return {\n        success: false,\n        message: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Lỗi kết nối đến server'\n      };\n    }\n  },\n  // Logout user\n  async logout() {\n    try {\n      // In a real application, we would call the API to invalidate the token\n      // For demo purposes, we'll just simulate the API call\n      await new Promise(resolve => setTimeout(resolve, 300));\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Logout service error:', error);\n      throw error;\n    }\n  },\n  // Check if token is valid\n  async validateToken() {\n    try {\n      // In a real application, we would verify the token with the server\n      // For demo purposes, we'll assume any token in localStorage is valid\n      const token = localStorage.getItem('token');\n      return !!token;\n    } catch (error) {\n      console.error('Token validation error:', error);\n      return false;\n    }\n  }\n};\nexport default authService;","map":{"version":3,"names":["apiService","authService","login","username","password","console","log","defaults","baseURL","response","post","data","success","localStorage","setItem","token","user","id","error","message","_error$response","_error$response2","_error$response3","_error$response4","_error$response4$data","status","statusText","isNetworkError","logout","Promise","resolve","setTimeout","validateToken","getItem"],"sources":["C:/Users/admin/OneDrive/Máy tính/YOLO_HOME/frontend/src/services/authService.js"],"sourcesContent":["import apiService from './apiService';\r\n\r\nconst authService = {\r\n  // Login user\r\n  async login(username, password) {\r\n    try {\r\n      console.log('Attempting login with username:', username);\r\n      console.log('API URL being used:', `${apiService.defaults.baseURL}/auth/login`);\r\n      \r\n      const response = await apiService.post('/auth/login', { username, password });\r\n      console.log('Login response received:', response);\r\n      \r\n      if (response.data.success) {\r\n        // Save token to localStorage\r\n        localStorage.setItem('token', response.data.token);\r\n        localStorage.setItem('userId', response.data.user.id);\r\n        \r\n        return response.data;\r\n      } else {\r\n        console.error('Login failed:', response.data.message);\r\n        return {\r\n          success: false,\r\n          message: response.data.message || 'Đăng nhập thất bại'\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Login service error:', error);\r\n      // Detailed logging for network errors\r\n      console.error('Error details:', {\r\n        status: error.response?.status,\r\n        statusText: error.response?.statusText,\r\n        data: error.response?.data,\r\n        isNetworkError: !error.response\r\n      });\r\n      \r\n      // Kiểm tra chi tiết lỗi kết nối\r\n      if (!error.response) {\r\n        return {\r\n          success: false,\r\n          message: 'Không thể kết nối đến máy chủ. Vui lòng kiểm tra kết nối mạng hoặc máy chủ đã được khởi động.'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Lỗi kết nối đến server'\r\n      };\r\n    }\r\n  },\r\n  \r\n  // Logout user\r\n  async logout() {\r\n    try {\r\n      // In a real application, we would call the API to invalidate the token\r\n      // For demo purposes, we'll just simulate the API call\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Logout service error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Check if token is valid\r\n  async validateToken() {\r\n    try {\r\n      // In a real application, we would verify the token with the server\r\n      // For demo purposes, we'll assume any token in localStorage is valid\r\n      const token = localStorage.getItem('token');\r\n      return !!token;\r\n    } catch (error) {\r\n      console.error('Token validation error:', error);\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\nexport default authService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}