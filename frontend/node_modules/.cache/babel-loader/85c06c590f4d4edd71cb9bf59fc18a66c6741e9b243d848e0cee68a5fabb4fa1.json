{"ast":null,"code":"import apiService from './apiService';\nconst deviceService = {\n  // Get all devices\n  async getDevices() {\n    try {\n      const response = await apiService.get('/devices');\n      return response.data.data;\n    } catch (error) {\n      console.error('Error fetching devices:', error);\n      throw error;\n    }\n  },\n  // Get device by ID\n  async getDeviceById(id) {\n    try {\n      // In a real application, we would call the API\n      const response = await apiService.get(`/devices/${id}`);\n      return response.data.data;\n    } catch (error) {\n      console.error(`Error fetching device with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Update device status\n  async updateDeviceStatus(id, status) {\n    try {\n      // In a real application, we would call the API\n      const response = await apiService.put(`/devices/${id}`, {\n        status\n      });\n      return response.data.data;\n    } catch (error) {\n      console.error(`Error updating device status for ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Toggle device by type\n  async toggleDevicesByType(type) {\n    try {\n      // In a real application, we would call the API\n      const response = await apiService.post(`/devices/toggle-by-type`, {\n        type\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error toggling devices of type ${type}:`, error);\n      throw error;\n    }\n  }\n};\nexport default deviceService;","map":{"version":3,"names":["apiService","deviceService","getDevices","response","get","data","error","console","getDeviceById","id","updateDeviceStatus","status","put","toggleDevicesByType","type","post"],"sources":["C:/Users/admin/OneDrive/Máy tính/YOLO_HOME - Copy/frontend/src/services/deviceService.js"],"sourcesContent":["import apiService from './apiService';\r\n\r\nconst deviceService = {\r\n  // Get all devices\r\n  async getDevices() {\r\n    try {\r\n      const response = await apiService.get('/devices');\r\n      return response.data.data;\r\n    } catch (error) {\r\n      console.error('Error fetching devices:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Get device by ID\r\n  async getDeviceById(id) {\r\n    try {\r\n      // In a real application, we would call the API\r\n      const response = await apiService.get(`/devices/${id}`);\r\n      return response.data.data;\r\n      \r\n    } catch (error) {\r\n      console.error(`Error fetching device with ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Update device status\r\n  async updateDeviceStatus(id, status) {\r\n    try {\r\n      // In a real application, we would call the API\r\n      const response = await apiService.put(`/devices/${id}`, { status });\r\n      return response.data.data;\r\n      \r\n    } catch (error) {\r\n      console.error(`Error updating device status for ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Toggle device by type\r\n  async toggleDevicesByType(type) {\r\n    try {\r\n      // In a real application, we would call the API\r\n      const response = await apiService.post(`/devices/toggle-by-type`, { type });\r\n      return response.data;\r\n      \r\n    } catch (error) {\r\n      console.error(`Error toggling devices of type ${type}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default deviceService;"],"mappings":"AAAA,OAAOA,UAAU,MAAM,cAAc;AAErC,MAAMC,aAAa,GAAG;EACpB;EACA,MAAMC,UAAUA,CAAA,EAAG;IACjB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMH,UAAU,CAACI,GAAG,CAAC,UAAU,CAAC;MACjD,OAAOD,QAAQ,CAACE,IAAI,CAACA,IAAI;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAME,aAAaA,CAACC,EAAE,EAAE;IACtB,IAAI;MACF;MACA,MAAMN,QAAQ,GAAG,MAAMH,UAAU,CAACI,GAAG,CAAC,YAAYK,EAAE,EAAE,CAAC;MACvD,OAAON,QAAQ,CAACE,IAAI,CAACA,IAAI;IAE3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiCG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAC5D,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMI,kBAAkBA,CAACD,EAAE,EAAEE,MAAM,EAAE;IACnC,IAAI;MACF;MACA,MAAMR,QAAQ,GAAG,MAAMH,UAAU,CAACY,GAAG,CAAC,YAAYH,EAAE,EAAE,EAAE;QAAEE;MAAO,CAAC,CAAC;MACnE,OAAOR,QAAQ,CAACE,IAAI,CAACA,IAAI;IAE3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuCG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAClE,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMO,mBAAmBA,CAACC,IAAI,EAAE;IAC9B,IAAI;MACF;MACA,MAAMX,QAAQ,GAAG,MAAMH,UAAU,CAACe,IAAI,CAAC,yBAAyB,EAAE;QAAED;MAAK,CAAC,CAAC;MAC3E,OAAOX,QAAQ,CAACE,IAAI;IAEtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkCQ,IAAI,GAAG,EAAER,KAAK,CAAC;MAC/D,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeL,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}